题目描述，判断一个数是否是回数。（回数是指从前往后看和从后往前看都一样的数）

我的思路：首先可以判断的是，负数不存在回数，对于非负数的求解情况，我的思路时首先将该整数转化为一个字符串，然后将该字符串进行反转，
然后比较两个字符串是否相等，具体代码如下：

class Solution(object):
    def isPalindrome(self, x):
        """
        :type x: int
        :rtype: bool
        """
        if x<0:
            return False
        else:
            x1 = str(x)[::-1]
            #此处应该就具体机器的字长进行整数是否溢出的判断。
            if x1 == str(x):
                return True
            else:
                return False
 
 这样做可能存在反转后整数溢出的问题，因此在将整数反转后需要对其进行大小判断。
